// Mocks generated by Mockito 5.4.6 from annotations
// in todo_app/test/feature/todo/view_model/mock_todo_repository.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app/core/failure.dart' as _i5;
import 'package:todo_app/feature/todo/model/todo_model.dart' as _i6;

import 'mock_todo_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TodoRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepo extends _i1.Mock implements _i3.TodoRepo {
  MockTodoRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.TodoModel>>> fetch() =>
      (super.noSuchMethod(
            Invocation.method(#fetch, []),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.TodoModel>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.TodoModel>>(
                    this,
                    Invocation.method(#fetch, []),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.TodoModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> add(_i6.TodoModel? todo) =>
      (super.noSuchMethod(
            Invocation.method(#add, [todo]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i5.Failure, _i2.Unit>(
                this,
                Invocation.method(#add, [todo]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
}

/// A class which mocks [MyToastHepler].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyToastHepler extends _i1.Mock implements _i3.MyToastHepler {
  MockMyToastHepler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool?> show(String? msg) =>
      (super.noSuchMethod(
            Invocation.method(#show, [msg]),
            returnValue: _i4.Future<bool?>.value(),
          )
          as _i4.Future<bool?>);

  @override
  _i4.Future<bool?> cancel() =>
      (super.noSuchMethod(
            Invocation.method(#cancel, []),
            returnValue: _i4.Future<bool?>.value(),
          )
          as _i4.Future<bool?>);
}
